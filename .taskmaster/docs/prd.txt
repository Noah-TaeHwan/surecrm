# Overview  
SureCRM은 보험설계사를 위한 고객관리 솔루션으로 현재 MVP 단계에 있습니다. 웹 환경에서만 최적화되어 있어 실제 테스터들이 모바일 환경에서 UI가 깨져 사용이 불가능하다는 피드백을 받았습니다. 보험설계사들은 업무 특성상 외근이 많고 모바일 디바이스 사용 빈도가 높기 때문에, 반응형 웹 디자인 구현이 서비스 성공의 핵심 요소입니다.

목표: 웹 화면과 동일한 사용자 경험을 모바일/태블릿에서도 제공하는 완전한 반응형 디자인 구현 (PWA 제외, 순수 반응형 웹)

# Core Features  
## 1. 반응형 UI 컴포넌트 시스템
- 모든 ShadCN UI 컴포넌트의 모바일 최적화
- Tailwind CSS 브레이크포인트 기반 반응형 레이아웃
- 터치 인터페이스 최적화 (버튼 크기, 간격, 제스처)
- 모바일 우선 디자인 원칙 적용

## 2. 네비게이션 시스템 개선
- 데스크톱: 사이드바 네비게이션 유지
- 모바일/태블릿: 햄버거 메뉴 또는 하단 탭 네비게이션
- 빠른 액세스를 위한 주요 기능 바로가기
- 컨텍스트 기반 네비게이션 최적화

## 3. 페이지별 반응형 최적화
### 대시보드 (dashboard)
- KPI 카드 그리드를 모바일에서 세로 스택으로 변환
- 차트 및 그래프의 모바일 최적화
- 위젯 우선순위에 따른 배치 조정

### 고객관리 (clients)
- 고객 목록을 카드 뷰로 전환
- 검색 및 필터 인터페이스 모바일 최적화
- 고객 상세 정보 모달/페이지 반응형 처리

### 영업 파이프라인 (pipeline)
- 칸반 보드의 수평/수직 스크롤 최적화
- 드래그 앤 드롭 터치 제스처 지원
- 파이프라인 단계별 뷰 모바일 적응

### 일정관리 (calendar)
- 캘린더 뷰 (월/주/일) 모바일 최적화
- 구글 캘린더 연동 기능 반응형 처리
- 미팅 생성/편집 모달 터치 최적화

### 보고서 (reports)
- 차트 및 데이터 테이블 모바일 최적화
- 필터 및 날짜 선택기 터치 인터페이스
- 데이터 내보내기 기능 모바일 지원

## 4. 성능 최적화
- 모바일 환경 로딩 속도 개선
- 이미지 및 리소스 지연 로딩
- 터치 반응성 최적화
- 오프라인 기본 기능 지원

# User Experience  
## 사용자 페르소나
**주 사용자**: 보험설계사 (30-50대)
- 외근 업무가 빈번하여 모바일 디바이스 사용 비중 높음
- 고객 미팅 중 실시간 정보 조회 필요
- 이동 중 일정 확인 및 고객 정보 업데이트 필요
- 기술적 복잡성보다 직관적 사용성 선호

## 핵심 사용 플로우
1. **모바일 고객 관리**: 외근 중 고객 정보 조회 → 통화 기록 입력 → 다음 액션 스케줄링
2. **이동 중 일정 확인**: 당일 스케줄 확인 → 고객 연락처 바로 전화 → 위치 정보 확인
3. **현장 계약 처리**: 계약 정보 입력 → 파이프라인 단계 업데이트 → 수수료 확인

## UX 원칙
- **터치 우선**: 모든 인터랙션이 터치에 최적화
- **한 손 사용 가능**: 엄지손가락만으로 주요 기능 접근
- **빠른 로딩**: 3초 이내 페이지 로드
- **직관적 네비게이션**: 2탭 이내 모든 기능 접근
- **오프라인 내구성**: 네트워크 불안정 시에도 기본 기능 유지

# Technical Architecture  
## 프론트엔드 반응형 구조
- **Tailwind CSS 브레이크포인트 시스템**
  - sm: 640px (모바일 가로)
  - md: 768px (태블릿 세로)  
  - lg: 1024px (태블릿 가로/소형 데스크톱)
  - xl: 1280px (데스크톱)

- **컴포넌트 아키텍처**
  - `/app/common/components/responsive/`: 반응형 전용 컴포넌트
  - `/app/common/layouts/`: 디바이스별 레이아웃 컴포넌트
  - `/app/common/hooks/`: 뷰포트 감지 및 디바이스 타입 훅

## 반응형 디자인 시스템
- **그리드 시스템**: CSS Grid + Flexbox 하이브리드
- **Typography Scale**: 디바이스별 폰트 크기 조정
- **Spacing System**: 터치 타겟 44px 최소 크기 보장
- **Color Contrast**: 모바일 환경 가독성 최적화

## 기존 Features 모듈 구조 유지
```
app/features/
├── dashboard/ (대시보드 반응형)
├── clients/ (고객관리 반응형)  
├── pipeline/ (영업파이프라인 반응형)
├── calendar/ (일정관리 반응형)
├── reports/ (보고서 반응형)
├── settings/ (설정 반응형)
├── team/ (팀관리 반응형)
├── billing/ (결제 반응형)
├── notifications/ (알림 반응형)
├── network/ (네트워크 반응형)
├── admin/ (관리자 반응형)
├── invitations/ (초대 반응형)
└── influencers/ (인플루언서 반응형)
```

# Development Roadmap  
## Phase 1: 기반 인프라 구축 (Foundation)
### 1.1 반응형 디자인 시스템 구축
- Tailwind 설정 업데이트 및 브레이크포인트 정의
- 공통 반응형 컴포넌트 라이브러리 생성
- 디바이스 감지 및 뷰포트 관리 훅 개발
- 반응형 레이아웃 베이스 컴포넌트 생성

### 1.2 네비게이션 시스템 개선
- 모바일 햄버거 메뉴 구현
- 반응형 사이드바 컴포넌트 개발  
- 하단 탭 네비게이션 (모바일) 구현
- 브레드크럼 및 백 버튼 시스템 구축

## Phase 2: 핵심 페이지 반응형 구현 (Core Pages)
### 2.1 대시보드 반응형화
- KPI 카드 반응형 그리드 시스템
- 차트 컴포넌트 모바일 최적화
- 위젯 우선순위 기반 모바일 레이아웃
- 빠른 액션 버튼 모바일 배치

### 2.2 고객관리 반응형화  
- 고객 목록 카드/리스트 뷰 전환
- 검색 및 필터 모바일 UI
- 고객 상세 정보 모바일 최적화
- 연락처 바로 전화 기능 (tel: 링크)

### 2.3 영업 파이프라인 반응형화
- 칸반 보드 모바일 스크롤 최적화
- 터치 드래그 앤 드롭 구현
- 파이프라인 카드 모바일 레이아웃
- 단계별 필터링 모바일 UI

## Phase 3: 확장 기능 반응형 구현 (Extended Features)
### 3.1 일정관리 반응형화
- 캘린더 컴포넌트 모바일 최적화
- 미팅 생성/편집 모달 터치 UI
- 구글 캘린더 연동 모바일 지원
- 일정 알림 모바일 최적화

### 3.2 보고서 및 분석 반응형화
- 차트 라이브러리 모바일 최적화
- 데이터 테이블 모바일 스크롤 처리
- 필터 및 기간 선택 모바일 UI
- 보고서 내보내기 모바일 지원

### 3.3 나머지 기능 모듈 반응형화
- 팀 관리 (team) 모바일 최적화
- 설정 (settings) 모바일 UI
- 알림 (notifications) 모바일 최적화
- 기타 보조 기능들 반응형 처리

## Phase 4: 성능 최적화 및 품질 보증 (Optimization)
### 4.1 모바일 성능 최적화
- 지연 로딩 및 코드 스플리팅
- 이미지 최적화 및 WebP 지원
- 모바일 캐싱 전략 구현
- 터치 반응성 최적화

### 4.2 사용성 테스트 및 개선
- 실제 기기 테스트 (iOS/Android)
- 사용자 피드백 수집 및 반영
- 접근성 (a11y) 검증 및 개선
- 크로스 브라우저 호환성 확인

# Logical Dependency Chain
## 개발 순서 및 의존성

### 1단계: 기반 시스템 (필수 선행 작업)
1. **반응형 디자인 시스템**: 모든 후속 작업의 기반
2. **공통 컴포넌트 라이브러리**: 일관된 UI 보장
3. **네비게이션 시스템**: 사용자 플로우의 핵심

### 2단계: 핵심 비즈니스 기능 (우선순위 높음)
1. **대시보드**: 첫 화면, 사용자 만족도 직결
2. **고객관리**: 핵심 비즈니스 로직
3. **영업 파이프라인**: 매출 관련 핵심 기능

### 3단계: 확장 기능 (점진적 개선)
1. **일정관리**: 업무 효율성 향상
2. **보고서**: 데이터 분석 및 인사이트
3. **기타 기능들**: 부가 가치 제공

### 4단계: 최적화 및 완성도 (마지막 단계)
1. **성능 최적화**: 사용자 경험 개선
2. **품질 보증**: 안정성 및 신뢰성 확보

## 빠른 가시적 결과를 위한 전략
- Phase 1 완료 후 즉시 대시보드 반응형 구현으로 빠른 데모 가능
- 각 페이지별 독립적 개발로 점진적 배포 가능
- 기존 웹 기능에 영향 없이 반응형 기능 추가

# Risks and Mitigations  
## 기술적 위험 요소
### 1. 기존 CSS 충돌 위험
- **위험**: 기존 스타일과 새로운 반응형 스타일 간 충돌
- **대응**: CSS 모듈화 및 네임스페이스 분리, 점진적 마이그레이션

### 2. 성능 저하 위험  
- **위험**: 추가된 반응형 코드로 인한 번들 크기 증가
- **대응**: 코드 스플리팅, 지연 로딩, 트리 셰이킹 최적화

### 3. 터치 인터페이스 호환성
- **위험**: 기존 마우스 중심 인터랙션의 터치 환경 부적응
- **대응**: 프로그레시브 인핸스먼트, 멀티 인풋 지원

## 비즈니스 위험 요소
### 1. 기존 사용자 혼란
- **위험**: 급격한 UI 변화로 인한 기존 사용자 이탈
- **대응**: 점진적 롤아웃, 사용자 교육, 피드백 반영

### 2. 개발 일정 지연
- **위험**: 13개 모듈의 반응형 작업으로 인한 일정 지연
- **대응**: 모듈별 독립 개발, 우선순위 기반 단계별 배포

### 3. 디바이스 파편화
- **위험**: 다양한 모바일 기기 및 브라우저 호환성 이슈  
- **대응**: 대표 기기 중심 테스트, 폴리필 및 폴백 전략

# Appendix  
## 타겟 디바이스 및 브라우저
### 모바일 디바이스
- **iOS**: iPhone 12 이상 (Safari, Chrome)
- **Android**: Galaxy S21 이상 (Chrome, Samsung Internet)
- **화면 크기**: 375px ~ 414px (세로 기준)

### 태블릿 디바이스  
- **iPad**: 9세대 이상 (Safari, Chrome)
- **Android Tablet**: 10인치 이상 (Chrome)
- **화면 크기**: 768px ~ 1024px

### 지원 브라우저
- **Modern Browsers**: Chrome 90+, Safari 14+, Edge 90+
- **Mobile Browsers**: iOS Safari, Chrome Mobile, Samsung Internet

## 성능 목표
- **First Contentful Paint**: < 1.5초
- **Largest Contentful Paint**: < 2.5초  
- **Cumulative Layout Shift**: < 0.1
- **First Input Delay**: < 100ms

## 접근성 요구사항
- **WCAG 2.1 AA 준수**
- **터치 타겟 최소 44px**
- **컬러 대비 4.5:1 이상**
- **키보드 네비게이션 지원**
- **스크린 리더 호환성**

## 기술 스택 세부사항
- **Frontend**: React Router v7, TypeScript, Tailwind CSS v3
- **UI Components**: ShadCN UI (Radix UI 기반)
- **Build Tool**: Vite
- **Testing**: Vitest, React Testing Library
- **Mobile Testing**: BrowserStack, 실제 기기 테스트
</PRD> 